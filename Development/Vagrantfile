# -*- mode: ruby -*-
# vi: set ft=ruby :


Vagrant.configure("2") do |config|

  hostUsername = ENV['USERNAME']
  hostHome = ENV['HOME']
  mountHome = "/mnt/home"

  guestHostname = "development"
  guestUsername = ""
  guestPassword = ""
  guestHome = ""

  if Dir.glob("#{File.dirname(__FILE__)}/.vagrant/machines/" + guestHostname + "/*").empty? || ARGV[1] == '--provision'
    
    print "Username: "
    guestUsername = STDIN.gets.chomp

    print "Password: "
    guestPassword = STDIN.gets.chomp
    print "\n"

    guestHome = File.join("/home/", guestUsername)

  end
  
  config.vm.box = "bento/ubuntu-16.10"
  config.vm.synced_folder hostHome, mountHome

  config.vm.define guestHostname

  config.vm.provider "virtualbox" do |v|
    v.name = guestHostname
    v.memory = 8192
    v.cpus = 2
    v.customize ["modifyvm", :id, "--vram", "128"]
    v.gui = true
  end

  config.vm.provider "vmware_fusion" do |v|
    v.vmx['displayname'] = guestHostname
    v.vmx["memsize"] = "8192"
    v.vmx["numvcpus"] = "2"
    v.vmx["vramsize"] = "134217728"
    v.gui = true
  end   

  config.vm.provision "shell", inline: <<-SHELL
    apt-get update
    apt-get install -y xfce4 lightdm lightdm-gtk-greeter xfce4-terminal xfce4-whiskermenu-plugin xfce4-taskmanager
  SHELL

  config.vm.provider "virtualbox" do
    config.vm.provision "shell", inline: "apt-get install -y virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11"
  end

  config.vm.provider "vmware_fusion" do
    config.vm.provision "shell", inline: "apt-get install -y open-vm-tools open-vm-tools-desktop"
  end

  config.vm.provision "shell", inline: <<-SHELL
    apt-get remove -y --purge xscreensaver
    apt-get autoremove -y --purge
    service lightdm start
    startxfce4&  
  SHELL

  #config.vm.provision :shell, :path => "provision-vagrant.sh", :args => [username, password]
  
  config.vm.provision "shell", path: "Provision/Termite.sh"
  config.vm.provision "shell", path: "Provision/Go.sh"
  config.vm.provision "shell", path: "Provision/Java.sh"
  config.vm.provision "shell", path: "Provision/Node.sh"
  config.vm.provision "shell", path: "Provision/Docker.sh"
  config.vm.provision "shell", path: "Provision/Aws.sh"
  config.vm.provision "shell", path: "Provision/Chrome.sh"
  config.vm.provision "shell", path: "Provision/Sublime.sh"

  config.vm.provision "shell", inline: "adduser --disabled-password " + guestUsername
  config.vm.provision "shell", inline: "echo " + guestUsername + ":" + guestPassword + " | chpasswd"
  config.vm.provision "shell", inline: "adduser " + guestUsername + " sudo"
  config.vm.provision "shell", inline: "adduser " + guestUsername + " docker"

  config.vm.provision "shell", inline: "mkdir " + File.join(guestHome, ".ssh")
  config.vm.provision "shell", inline: "ln -s " + File.join(mountHome, ".ssh/*") + " " + File.join(guestHome, ".ssh")

  config.vm.provision "shell", inline: "mkdir " + File.join(guestHome, "Workspaces")
  config.vm.provision "shell", inline: "mkdir " + File.join(guestHome, "Workspaces/go")

  config.vm.provision "shell", path: "Login/Shell.sh"

  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # config.vm.network "forwarded_port", guest: 80, host: 8080
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
  # config.vm.network "private_network", ip: "192.168.33.10"
  # config.vm.network "public_network"

  # sed -i 's/# export PATH/export PATH/' /home/tysont/.zshrc
  # sed -i '1s/^/export GOPATH=$HOME\/Workspaces\/go\n/' /home/tysont/.zshrc
  # sed -i '1s/^/export GOROOT=\/opt\/go\n/' /home/tysont/.zshrc

end 



